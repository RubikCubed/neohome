---
import NavBar from "../components/NavBar.astro";
import "../styles/color.less";
import "../styles/base.less";
import "../styles/main.less";

import "../styles/alert.less";
import "../styles/code-copy.less";
import "../styles/tree-sitter.less";

// needed for global styles
import "../components/Button.astro";
import "../components/Tabs.astro";

import SEO from "../components/SEO.astro";
import type { Props as SeoProps } from "../components/SEO.astro";

export interface Props {
  seo?: SeoProps | undefined;
}

import { ViewTransitions } from "astro:transitions";
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />

    <ViewTransitions />

    <slot name="head" />

    <SEO {...Astro.props.seo} />
  </head>

  <body class="flex flex-col items-center">
    <NavBar class="col-span-full row-span-1" />

    <slot />
  </body><script is:inline>
    window.loadTheme = function (document) {
      const theme = (() => {
        const saved = localStorage.getItem("theme");
        if (saved !== null) {
          return saved;
        } else if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
          return "dark";
        } else {
          return "light";
        }
      })();

      if (theme === "light") {
        document.documentElement.classList.remove("dark");
      } else {
        document.documentElement.classList.add("dark");
      }
      document.documentElement.classList.add("theme-loaded");

      localStorage.setItem("theme", theme);
    };

    document.addEventListener("astro:after-swap", () => {
      window.loadTheme(document);
    });

    window.loadTheme(document);
  </script>

  <script>
    document.addEventListener("astro:page-load", () => {
      const toggle = document.getElementById("themeToggle");
      if (toggle !== null) {
        toggle.onclick = () => {
          document.documentElement.classList.toggle("dark");

          const isDark = document.documentElement.classList.contains("dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");

          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          (window as any).loadTheme(document);
        };
      }
    });
  </script>

  <script>
    import { sleep } from "../utils";

    document.addEventListener("astro:page-load", () => {
      document.querySelectorAll(".code-copy")?.forEach((button) => {
        button.addEventListener("click", async () => {
          const text = button.parentElement?.textContent;
          if (typeof text === "string") {
            const type = "text/plain";
            const blob = new Blob([text], { type });
            const data = [new ClipboardItem({ [type]: blob })];
            await navigator.clipboard.write(data);

            button.classList.add("active");

            await sleep(2000);

            button.classList.remove("active");
          }
        });
      });
    });
  </script>

  <script src="../scripts/toc.ts"></script>
</html>
