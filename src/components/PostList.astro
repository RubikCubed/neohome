---
import { getCollection } from "astro:content";
import Post from "./Post.astro";

export interface Props {
    full?: boolean | undefined;
}

const blogEntries = (await getCollection("blog"))
    .sort((a, b) => {
        return b.data.pubDate.getTime() - a.data.pubDate.getTime();
    })
    .filter((elem) => {
        if (elem.data.draft === true) {
            return false;
        } else {
            return true;
        }
    });

const full = Astro.props.full ?? true;

const postLimit = 7;
---

<h1>Posts</h1>

<ul class="flex flex-col gap-3">
    {
        (() => {
            const elems = [];
            let year = 9999;

            for (const [index, entry] of blogEntries.entries()) {
                if (index >= postLimit && full === false) {
                    break;
                }

                const thisYear = entry.data.pubDate.getFullYear();
                if (thisYear < year) {
                    year = thisYear;
                    elems.push(
                        <li class="year">
                            <h2>{year}</h2>
                        </li>,
                    );
                }
                const p = <Post post={entry} />;
                elems.push(p);
            }

            if (full === false) {
                elems.push(
                    <li class="archive-indicator">
                        <a href="/blog">
                            <h3>Load more</h3>
                        </a>
                    </li>,
                );
            }

            return elems;
        })()
    }
</ul>

<style>
    h1 {
        margin: 8px;
        margin-bottom: 10px;
    }

    .archive-indicator {
        margin-top: 2rem;
        align-self: center;
    }

    .year {
        margin-top: 1rem;
        align-self: self-end;
    }
</style>
